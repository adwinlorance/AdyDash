name: Deploy Python app to Azure Web App

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  test-and-deploy:
    runs-on: ubuntu-latest
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.12'

      - name: Cache pip packages
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest pylint bandit safety

      - name: Run tests
        run: |
          pytest

      - name: Run linting
        run: |
          pylint --disable=C0111,C0103 *.py

      - name: Security check
        run: |
          bandit -r .
          safety check

      - name: Create version tag
        id: create_tag
        run: |
          VERSION=$(date +'%Y.%m.%d.%H%M')
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          git tag $VERSION
          git push origin $VERSION

      - name: Prepare deployment package
        run: |
          mkdir deployment
          cp -r app.py requirements.txt web.config startup.txt deployment/
          cp -r static templates deployment/
          cp calendar_setup.py config_manager.py deployment/
          cd deployment
          python -m venv antenv
          source antenv/bin/activate
          pip install --upgrade pip
          pip install -r requirements.txt
          pip install gunicorn
          echo "Deployment package contents:"
          ls -la
          zip -r ../package.zip ./*

      - name: 'Deploy to Azure Web App'
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ secrets.AZURE_WEBAPP_NAME }}
          publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
          package: package.zip

      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Check deployment and initial logs
        run: |
          echo "Waiting for deployment to complete..."
          sleep 30
          echo "Checking application startup logs (will timeout after 30 seconds)..."
          timeout 30 az webapp log tail --name ${{ secrets.AZURE_WEBAPP_NAME }} --resource-group ${{ secrets.AZURE_RESOURCE_GROUP }} || true

      - name: Run smoke tests
        run: |
          echo "Running smoke tests..."
          APP_URL="https://${{ secrets.AZURE_WEBAPP_NAME }}.azurewebsites.net"
          # Wait for app to be available
          for i in {1..30}; do
            if curl -s -f "$APP_URL/health" > /dev/null; then
              echo "Application is up!"
              break
            fi
            if [ $i -eq 30 ]; then
              echo "Application failed to start"
              exit 1
            fi
            echo "Waiting for application to start... ($i/30)"
            sleep 10
          done
          
          # Check main endpoints
          curl -f "$APP_URL/" || exit 1
          curl -f "$APP_URL/health" || exit 1
          
          echo "Smoke tests completed successfully" 